<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2020-12-10T18:35:43-06:00</updated><id>/feed.xml</id><title type="html">FOSS Academic</title><subtitle>A blog dedicated to two things. First, an exploration of Free and Open Source tools useful to academics. Second, an exploration of the culture, politics, and practices of FOSS.</subtitle><entry><title type="html">The Tuxies, Academic Style</title><link href="/2020/12/10/The-Tuxies-Academic-Style.html" rel="alternate" type="text/html" title="The Tuxies, Academic Style" /><published>2020-12-10T00:00:00-06:00</published><updated>2020-12-10T00:00:00-06:00</updated><id>/2020/12/10/The-Tuxies-Academic-Style</id><content type="html" xml:base="/2020/12/10/The-Tuxies-Academic-Style.html">&lt;p&gt;The &lt;a href=&quot;https://linuxunplugged.com/&quot;&gt;Linux Unplugged podcast&lt;/a&gt; is hosting their first-ever Tuxies award. They’re &lt;a href=&quot;https://docs.google.com/forms/d/e/1FAIpQLSdJImbr7PdPA5oHwv4HUtVA6nspYYqYnG5W0hqrjaSI1AZebw/viewform?usp=send_form&quot;&gt;soliciting votes&lt;/a&gt; for a range of categories of FOSS projects.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/images/tuxintux.jpg&quot; alt=&quot;Tux the Penguin Wearing a Tuxedo&quot; title=&quot;Tux the Penguin Wearing a Tuxedo&quot; width=&quot;50%&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;I thought it might be good to nominate things from the FOSS Academic point of view, celebrating projects that help me do my academic work. So, here are the votes I cast.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;best-open-source-project&quot;&gt;Best Open Source Project&lt;/h2&gt;
&lt;p&gt;Their prompt is: “Not just released in 2020, but your very favorite open source project of all time.”&lt;/p&gt;

&lt;p&gt;I almost gave a nod to &lt;strong&gt;Mastodon.&lt;/strong&gt; Mastodon has done so much to offer a better alternative to corporate social media. Think about it: &lt;a href=&quot;https://www.nytimes.com/2020/12/10/technology/facebook-antitrust-suits-hurdles.html&quot;&gt;the US government and 40 states are suing Facebook for violating anti-trust laws and becoming a monopoly&lt;/a&gt; – and rightfully so, in my view. Facebook got that way by a) expoiting user-produced content and b) buying up the competition. Mastodon, on the other hand, is a non-commercial, FOSS alternative that is decentralized. And it works really well. (I’ll have more to say about Mastodon in the future).&lt;/p&gt;

&lt;p&gt;But I have to go with my old friend &lt;strong&gt;Zotero,&lt;/strong&gt; which has been a mainstay of my “&lt;a href=&quot;/2020/12/01/Zotero-Tips-and-Tricks.html&quot;&gt;FOSS Academic Lifestyle Dream&lt;/a&gt;” for over decade. I wish I could tell the crew at Unplugged what Zotero means to academics. Indeed, I would suggest they check it out for their own research purposes. They may not understand how important a good citation manager is to an academic. So, if Chris and Wes are reading this: Zotero deserves some Tuxy (Tuxie?) love.&lt;/p&gt;

&lt;h2 id=&quot;best-newcomer-project&quot;&gt;Best Newcomer Project&lt;/h2&gt;

&lt;p&gt;This one was meant to be for a project made in 2020. I screwed it up. I said &lt;strong&gt;Jekyll&lt;/strong&gt;, because I read in some listicle slideshow article that it was a new system in 2020. Turns out it’s not.&lt;/p&gt;

&lt;p&gt;Still, it’s a great system. Once it’s up and running, writing up blog posts is quick and distraction-free. I can compose in any text editor. And it hooks in with Github.io, so you don’t need a hosting service to run your blog/website.&lt;/p&gt;

&lt;p&gt;So, maybe we can pretend I’m right and say this is a newcomer project and give ‘em a Tuxy?&lt;/p&gt;

&lt;p&gt;Come to think of it, I’m probably the worst person to ask about bleeding-edge things. &lt;a href=&quot;https://luddites.latenightlinux.com/&quot;&gt;I still miss the Linux Luddites show&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;best-text-editor-of-2020&quot;&gt;Best Text Editor of 2020&lt;/h2&gt;
&lt;p&gt;“There are many, but only one of them can be the winner. Which text editor did your fingers rock in 2020?”&lt;/p&gt;

&lt;p&gt;I am pretty certain I am wading into a Religious War (a &lt;strong&gt;Goal 2&lt;/strong&gt; topic for another day), but I will suggest &lt;strong&gt;Nano.&lt;/strong&gt; In 2020, I started using it more and more, not only to handle editing configuration files, but also in some cases for jotting down ideas in Markdown. It’s a really easy to use terminal text editor. I don’t live in the terminal, but for those of us who, like me, dip in from time to time, Nano helps us get things done.&lt;/p&gt;

&lt;h2 id=&quot;favorite-desktop-distro-of-2020&quot;&gt;Favorite Desktop Distro of 2020&lt;/h2&gt;
&lt;p&gt;“What was your favorite distro this year?”&lt;/p&gt;

&lt;p&gt;There’s an “Other” field, and I’d likely use that to say &lt;strong&gt;Linux Mint.&lt;/strong&gt; This past year I’ve experimented with &lt;strong&gt;Fedora 33&lt;/strong&gt; and &lt;strong&gt;Endeavour OS.&lt;/strong&gt; I’ve used various *buntus over the years. This year, however, when I sit down to get work done, I find myself using Mint more and more. I found &lt;a href=&quot;https://www.omgubuntu.co.uk/2020/03/linux-mint-network-file-sending-tool&quot;&gt;Warpinator&lt;/a&gt; to be really useful around the house and office for quickly sharing files. I also like the built-in backup system. Once I sit down at a Mint MATE box, I feel at home.&lt;/p&gt;

&lt;h2 id=&quot;favorite-server-distro-of-2020&quot;&gt;Favorite Server Distro of 2020&lt;/h2&gt;
&lt;p&gt;“What was your go to server distro this year?”&lt;/p&gt;

&lt;p&gt;I’m going with &lt;strong&gt;Ubuntu,&lt;/strong&gt; because I’ve set up Ubuntu servers to handle Nextcloud for my personal cloud and frankly, I don’t think about them all that much. Even as a colleague and I used Nextcloud to share files to write a book. We had no problems with the server. Ubuntu server was, in fact, boring: but that’s a good thing in a server!&lt;/p&gt;

&lt;h2 id=&quot;best-desktop-environment-of-2020&quot;&gt;Best Desktop Environment of 2020&lt;/h2&gt;
&lt;p&gt;“Which desktop environment was the real MVP for you this year?”&lt;/p&gt;

&lt;p&gt;I love &lt;strong&gt;MATE.&lt;/strong&gt; I was one of the many &lt;a href=&quot;https://www.zdnet.com/article/linus-torvalds-finds-gnome-3-4-to-be-a-total-user-experience-design-failure/&quot;&gt;who didn’t like the Gnome 3 switch&lt;/a&gt;. I had my desktop dialed in in Gnome 2, so I was so happy to find that I could do the same in MATE. If I try a new distro, I usually do so on MATE just to see if I could set up the same workflow, and it almost always works. I can get the panels and workspaces set up in the way I like in minutes, and toss in some &lt;strong&gt;&lt;a href=&quot;https://help.ubuntu.com/community/Devilspie&quot;&gt;Devilspie&lt;/a&gt;&lt;/strong&gt; and I’m good to go. All my applications load in their respective workspaces and are just a CTRL+right away, allowing me to shift from Zotero to Libreoffice to Firefox and back.&lt;/p&gt;

&lt;h2 id=&quot;best-linux-game-of-the-year&quot;&gt;Best Linux Game of the Year&lt;/h2&gt;
&lt;p&gt;“Favorite game that plays on Linux released in 2020, old games now working via Proton this year count!”&lt;/p&gt;

&lt;p&gt;I skipped this one. I play Mario Kart on a Retropi. That’s about it.&lt;/p&gt;

&lt;h2 id=&quot;best-of-tech-2020&quot;&gt;Best of Tech 2020&lt;/h2&gt;
&lt;p&gt;“What tech or perhaps open source project has really impressed you this year?”&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;PinePhone.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Oh, it’s not perfect. Not at all. I almost threw mine across the room at one point.&lt;/p&gt;

&lt;p&gt;But I can see it, like a vision: all of us distro-hopping on our phones. Easily. In fact, I already have tried out four or five distos on it. I can spend a few hours installing them via &lt;a href=&quot;https://github.com/dreemurrs-embedded/Jumpdrive&quot;&gt;Jumpdrive&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And the idea that my phone won’t talk to Google or Apple makes me giddy.&lt;/p&gt;

&lt;p&gt;People who know me will tell you that I hate phones. I hate them mainly because I find them insulting. They’re computers, but I can’t really mess with ‘em. I just… &lt;em&gt;use&lt;/em&gt; them. And they use me. They are designed to suck up as much data about me as possible, and &lt;em&gt;there’s nothing I can do to stop them.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The PinePhone is changing that.&lt;/p&gt;

&lt;h2 id=&quot;most-life-changing-hardware--device--gadget&quot;&gt;Most Life-Changing Hardware / Device / Gadget&lt;/h2&gt;
&lt;p&gt;“Did you get something that upgrades your workflow? Or a new gadget that’s changed your game?”&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Raspberry Pi 4&lt;/strong&gt; has been excellent. I think the “game” that’s changed for me is doing research on the Web. I’m probably not supposed to admit this, but I use a Pi-hole in my office to absorb all the krufty ads that hit my machines. I’m quite certain it is helping speed up browsing and thus speed up research online. Plus, I’m using another Pi 4 as a home media center. That actually could be good for teaching, too: I could VPN into my home network if I want to show a video from my library in class.&lt;/p&gt;</content><author><name>RWG</name></author><category term="Tuxies" /><category term="Zotero" /><category term="Mastodon" /><category term="Jekyll" /><category term="Nano" /><category term="Linux Mint" /><category term="MATE" /><category term="PinePhone" /><category term="Raspberry Pi 4" /><category term="Goal 1" /><summary type="html">The Linux Unplugged podcast is hosting their first-ever Tuxies award. They’re soliciting votes for a range of categories of FOSS projects. I thought it might be good to nominate things from the FOSS Academic point of view, celebrating projects that help me do my academic work. So, here are the votes I cast.</summary></entry><entry><title type="html">Dreaming in code</title><link href="/2020/12/06/Dreaming-In-Code.html" rel="alternate" type="text/html" title="Dreaming in code" /><published>2020-12-06T00:00:00-06:00</published><updated>2020-12-06T00:00:00-06:00</updated><id>/2020/12/06/Dreaming%20In%20Code</id><content type="html" xml:base="/2020/12/06/Dreaming-In-Code.html">&lt;p&gt;There have been a lot of books that have influenced my career: Fred Turner’s &lt;em&gt;From Counterculture to Cyberculture,&lt;/em&gt; Gabriella Coleman’s &lt;em&gt;Hacker, Hoaxer, Whistleblower, Spy,&lt;/em&gt; Karl Marx’s &lt;em&gt;Grundrisse,&lt;/em&gt; John Law’s &lt;em&gt;Aircraft Stories,&lt;/em&gt; and Patricia Hill Collin’s &lt;em&gt;Black Feminist Thought.&lt;/em&gt; These works are a kind of well to return to, again and again, to quench intellectual thirsts: thinking historically about communication technologies, and thinking about heterogeneity in the cultures of communication technologies.&lt;/p&gt;

&lt;p&gt;But perhaps the closest to my heart, one of the books that came along at just the right moment in my career – a bubbling spring of the well – is Scott Rosenberg’s &lt;a href=&quot;http://www.dreamingincode.com/&quot;&gt;&lt;em&gt;Dreaming In Code&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;http://www.dreamingincode.com/&quot;&gt;
        &lt;img src=&quot;/assets/images/codepagetop.jpg&quot; alt=&quot;Dreaming in Code, by Scott Rosenberg&quot; title=&quot;Dreaming in Code, by Scott Rosenberg&quot; /&gt;
    &lt;/a&gt;
    &lt;figcaption&gt;
        Dreaming in Code -- image used as fair use
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;em&gt;Dreaming in Code&lt;/em&gt; tells the story of the development of &lt;a href=&quot;https://www.chandlerproject.org/&quot;&gt;Chandler&lt;/a&gt;, an open source, cross-platform “personal information manager.” This software was the brainchild of Mitch Kapor (of Lotus 1-2-3 fame, and the founder of a short-lived non-profit called the &lt;a href=&quot;http://www.osafoundation.org/&quot;&gt;Open Source Applications Foundation&lt;/a&gt;. While the OSAF was well-funded (to the tune of millions), and while Chandler was eventually built, it was marked by blown deadlines and cost overruns. And the project is now moribund.&lt;/p&gt;

&lt;p&gt;In other words, as Rosenberg wryly notes, Chandler is another in a long line of failed software projects. Unlike building bridges, he notes, software engineering is &lt;em&gt;hard.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So, this is not a &lt;strong&gt;Goal 1&lt;/strong&gt; post, because the software at the center of &lt;em&gt;Dreaming In Code&lt;/em&gt; is no longer available. Yes, &lt;a href=&quot;https://www.chandlerproject.org/&quot;&gt;the website is still live&lt;/a&gt;. Yes, the project did get far enough along to be useable. Maybe it could still be used if the code could be put into a container (Snap, Flatpak) – then, it could run in a modern Linux installation. If so, perhaps it could contribute to the #fald (FOSS Academic Lifestyle Dream).&lt;/p&gt;

&lt;p&gt;Then again, I’m not sure I would want such old software handling my email and calendars without the latest encryption. The last time I got Chandler to work was around Ubuntu 16.04 (though I may be wrong about the date), and I remember being underwhelmed by it.&lt;/p&gt;

&lt;p&gt;There are many reasons why the project failed. Perhaps Chandler failed because it didn’t adhere to the &lt;strong&gt;Unix Philosophy&lt;/strong&gt; (a decidedly &lt;strong&gt;Goal 2&lt;/strong&gt; topic) – it did not do just one thing and do it well, but &lt;a href=&quot;https://www.chandlerproject.org/vision/&quot;&gt;tried to do lots of things&lt;/a&gt; and thus did them poorly. Indeed, Rosenberg cites Linus Torvalds, who argues that open source production is best done with small goals.&lt;/p&gt;

&lt;p&gt;Or perhaps it was too centralized and did not attract a big enough base of contributors. Kapor reportedly threw a lot of money at Chandler, and part of his reasoning was to have his developers largely on-site in San Francisco. The project did not attract, as far as I can tell, a large base of contributors around world. (Indeed, if it had, perhaps we’d be on version 5.0 at this point).&lt;/p&gt;

&lt;p&gt;In the end, Chandler has faded out of consciousness, replaced by a whole host of other “PIMs”. The features it largely offers are replicated by email clients – not to mention the monstrosity that is Google.&lt;/p&gt;

&lt;p&gt;But tracing the failure of one relatively obscure FOSS project is not the real payoff of the book for me. &lt;em&gt;Dreaming In Code&lt;/em&gt; is important to me in a &lt;strong&gt;Goal 2&lt;/strong&gt; way because it started me out on the path of what I came to recognize as &lt;strong&gt;software studies.&lt;/strong&gt;  Although it’s not an academic book – Rosenberg is a journalist and founder of &lt;em&gt;Salon.com&lt;/em&gt; – the book is deep and exceptionally well researched. Academics have cited it – including luminaries like Rob Kitchin, Judy Wacjman, and Tim Jordan. Rosenberg’s research is excellent. His endnotes are &lt;a href=&quot;http://www.dreamingincode.com/endnotes/&quot;&gt;still online&lt;/a&gt; – it’s a wealth of what might be called “classic software studies” citations.&lt;/p&gt;

&lt;p&gt;He draws on Donald Knuth, Fred Brooks, Eric Raymond, Martin Campbell-Kelly, Vannevar Bush, Doug Englebart, Ellen Ullman, and many, many more. By tracing these citations, I could get a good grasp on the history of software engineering. Perhaps the most influential citation Rosenberg draws on is the late 1960s NATO conferences on software engineering. Along with Sarah Bell, I myself drew on that conference to write about &lt;a href=&quot;http://computationalculture.net/heterogeneous-software-engineering-garmisch-1968-microsoft-vista-and-a-methodology-for-software-studies/&quot;&gt;the engineering of Microsoft Vista as a form of “heterogeneous engineering”&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But there’s more than just a wealth of citations. Rosenberg embedded himself with the Chandler team, watching their struggles and connecting those struggles to the history of software engineering. The chapters often start with an episode in the development of Chandler – say, a debate over which programming language to use – which is followed by a deep dive into the history and politics of programming languages. At times, readers might find these too much of a diversion from the story of Chandler. Indeed, Rosenberg’s next book, &lt;em&gt;Say Everything,&lt;/em&gt; tends to avoid these sojourns. But I really, really dig them. The discussion of the NATO conference, for example, was just a great bit of history that prompted me to go and learn more about it.&lt;/p&gt;

&lt;p&gt;In addition to placing Chandler into a larger historical context, Rosenberg is also a compassionate, but critical, student of the history of Chandler. It’s a model of analysis of the people and technologies that go into software engineering, told in a beautiful narrative style that I would aspire to myself, and again, the citations are rich.&lt;/p&gt;

&lt;p&gt;I find myself returning to &lt;em&gt;Dreaming in Code&lt;/em&gt; again, and again, over the years. The first time I read it, in fact, I was so enthralled that I was nose-deep in it while my partner was giving birth to our son (at one point, she knocked the book out of my hands and said, “no more reading!”). I remember this in part because my Zotero note is dated the day before my son’s birth. As I set off on a new project – my &lt;strong&gt;Goal 2&lt;/strong&gt; project – I have decided to return to &lt;em&gt;Dreaming In Code.&lt;/em&gt; And I find myself at the well, again, and it is definitely not dry.&lt;/p&gt;</content><author><name>RWG</name></author><category term="Dreaming in Code" /><category term="FOSS Academic Lifestyle Dream" /><category term="Software Studies" /><category term="G2" /><summary type="html">There have been a lot of books that have influenced my career: Fred Turner’s From Counterculture to Cyberculture, Gabriella Coleman’s Hacker, Hoaxer, Whistleblower, Spy, Karl Marx’s Grundrisse, John Law’s Aircraft Stories, and Patricia Hill Collin’s Black Feminist Thought. These works are a kind of well to return to, again and again, to quench intellectual thirsts: thinking historically about communication technologies, and thinking about heterogeneity in the cultures of communication technologies. But perhaps the closest to my heart, one of the books that came along at just the right moment in my career – a bubbling spring of the well – is Scott Rosenberg’s Dreaming In Code. Dreaming in Code -- image used as fair use</summary></entry><entry><title type="html">Zotero tips and tricks</title><link href="/2020/12/01/Zotero-Tips-and-Tricks.html" rel="alternate" type="text/html" title="Zotero tips and tricks" /><published>2020-12-01T00:00:00-06:00</published><updated>2020-12-01T00:00:00-06:00</updated><id>/2020/12/01/Zotero%20Tips%20and%20Tricks</id><content type="html" xml:base="/2020/12/01/Zotero-Tips-and-Tricks.html">&lt;p&gt;If you’re not using &lt;a href=&quot;https://www.zotero.org&quot;&gt;Zotero&lt;/a&gt;… I don’t know what to say.&lt;/p&gt;

&lt;p&gt;If you are, you’re well on your way to living the FOSS Academic Lifestyle Dream.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/images/zotero.png&quot; alt=&quot;The Zotero Logo&quot; title=&quot;The Zotero Logo&quot; /&gt;
    &lt;figcaption&gt;The Zotero logo is in the public domain.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;!-- more --&gt;

&lt;p&gt;Zotero is a citation manager. And I’ve been using it so long I have a library of nearly 24,000 items.&lt;/p&gt;

&lt;p&gt;Zotero is a core part of my academic work. I run &lt;em&gt;everything&lt;/em&gt; through it. If I see a talk at a conference – the citation’s going in Zotero. Did I hear a good podcast? Put it in Z. Hey! that’s a relavant blog post. Put it in Z. My colleague shared a great syllabus? Zot! Was that intertesting a TV show? Oh, you know it’s gonna go in there. And of course, I put all the books and journal articles I read in there.&lt;/p&gt;

&lt;p&gt;Also, you guessed it: Zotero is FOSS (in this case, &lt;a href=&quot;http://www.gnu.org/licenses/agpl-3.0.html&quot;&gt;GNU GPL 3.0&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;In this &lt;strong&gt;Goal 1&lt;/strong&gt; post, I want to talk Zotero tips and tricks – things I &lt;em&gt;always&lt;/em&gt; do when I install and run this excellent piece of software.&lt;/p&gt;

&lt;h2 id=&quot;add-in-more-columns&quot;&gt;Add In More Columns&lt;/h2&gt;

&lt;p&gt;First thing’s first: My number one tip is adding more columns to the main pane. It’s a simple trick, but it’s really powerful, especially if you add “Date Added.” Zotero is &lt;em&gt;really good&lt;/em&gt; at pulling metadata from websites – including &lt;a href=&quot;https://www.worldcat.org&quot;&gt;WorldCat&lt;/a&gt; and Google Scholar – so a problem you might face is gathering too many things at a time. You might see a citation in passing that you really want to read. But which one of the 50 you grabbed in the past two days was it? For me, sorting with the newest added on top allows me to quickly scan through the latest entries and remember which ones I wanted to examine further.&lt;/p&gt;

&lt;h2 id=&quot;use-classic-add-citation&quot;&gt;Use “Classic Add Citation”&lt;/h2&gt;

&lt;p&gt;Zotero integrates with word processors, like LibreOffice or, if you must, Word or Google Docs. The default way of adding citations is an unobtrusive search bar. But I cut my teeth on the old way – the “Classic Add Citation” window. The nice thing about that window is that you can add the same columns as you use for the main Zotero window, with the same sorting capabilities.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/images/zoteroscreen.png&quot; alt=&quot;A screenshot of a Zotero library&quot; title=&quot;A Zotero screenshot&quot; /&gt;
    &lt;figcaption&gt;A screenshot of my library.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;tagging-tagging-tagging&quot;&gt;Tagging, Tagging, Tagging&lt;/h2&gt;

&lt;p&gt;From what I recall, Zotero was modeled after iTunes, and an iTunes feature is tagging. Zotero features that, too – and it’s &lt;em&gt;essential.&lt;/em&gt; Tags are very flexible. You can tag based on keywords supplied by the authors, tags based on which project you’re working on, tags based on wacky ideas you might have about how things should relate. I recommend tags because of…&lt;/p&gt;

&lt;h2 id=&quot;smart-folders&quot;&gt;Smart Folders&lt;/h2&gt;

&lt;p&gt;You can sort your citations into folders, certainly, but I much prefer smart folders. The vast majority of mine are based on tags, even Boolean combinations of tags, or combinations with other things (tags + types of items, type of items + publication date).&lt;/p&gt;

&lt;p&gt;A tip I picked up somewhere over the years is to have a smart folder that includes items added in the past 5 days (a more focused version of sorting by date added).&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/images/tags.png&quot; alt=&quot;A Zotero tag window&quot; title=&quot;A Zotero tag window&quot; /&gt;
    &lt;figcaption&gt;Some tags I've applied to an item in Zotero. Bonus points if you can figure out what citation they refer to.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;note-titles-yyyymmdd&quot;&gt;Note Titles: YYYYMMDD&lt;/h2&gt;

&lt;p&gt;I use Zotero to take notes. I know there are many other ways to take notes – and I will explore Linux-friendly, FOSS options soon – but for the past decade I’ve taken thousands of notes in Zotero and converted that raw material into books and articles. I have a system.&lt;/p&gt;

&lt;p&gt;And the basic thing I do with every note is have something like 20201201 – the date I’m taking notes – as the first line. The first line becomes the title of the note. I do that so when I return to the citation later, I know how long ago I read it. Did I read it back in 2009 – that is, back in grad school? Might be wise to reread it (and create a new note, with a more recent date). Or did I read it just a year ago? I can probably just review my notes instead of rereading the article or book.&lt;/p&gt;

&lt;p&gt;Those are the tips. There’s more… syncing libraries, working with groups. But these tips are the absolute heart of what I do with this excellent bit of FOSS.&lt;/p&gt;</content><author><name>RWG</name></author><category term="zotero" /><category term="g1" /><summary type="html">If you’re not using Zotero… I don’t know what to say. If you are, you’re well on your way to living the FOSS Academic Lifestyle Dream. The Zotero logo is in the public domain.</summary></entry><entry><title type="html">Introduction</title><link href="/2020/11/27/introduction.html" rel="alternate" type="text/html" title="Introduction" /><published>2020-11-27T00:00:00-06:00</published><updated>2020-11-27T00:00:00-06:00</updated><id>/2020/11/27/introduction</id><content type="html" xml:base="/2020/11/27/introduction.html">&lt;figure&gt;
    &lt;img src=&quot;/assets/images/tuxPaper.jpg&quot; alt=&quot;A small Tux the Penguin paper toy&quot; title=&quot;Tux Toy&quot; /&gt;
    &lt;figcaption&gt;&quot;Tux the penguin papercraft&quot; by Siobhan Rohlwink-Coutts is licensed with CC BY-NC-ND 2.0.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;As a university professor, I do a lot of different things, many of them having to do with technologies. I engage in research, write articles and books, put together syllabi, work with students, and collaborate with colleagues. All of these require the use of networked computers. But I don’t use Windows and I don’t use Apple.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;I’ve been doing this sort of work for over a decade. Looking back over this period, it occurs to me that one aspect of my career is pretty unique: it regularly – even insistently – relies on &lt;em&gt;Free&lt;/em&gt; and &lt;em&gt;Open Source&lt;/em&gt; (FOSS) software. I run Linux on my computers, use &lt;a href=&quot;https://www.libreoffice.org&quot;&gt;LibreOffice&lt;/a&gt; to write, collect research with &lt;a href=&quot;https://www.zotero.org&quot;&gt;Zotero&lt;/a&gt;, browse the web with Firefox, and communicate with as many FOSS systems as I can. I also rely heavily on projects that take their inspiration from FOSS: I’ve contributed to Wikipedia and I often use (and teach about) &lt;a href=&quot;https://creativecommons.org&quot;&gt;Creative Commons&lt;/a&gt; resources. And I’ve published many articles in Open Access journals.&lt;/p&gt;

&lt;p&gt;But I’m not just using FOSS tools, either. I’ve also published research articles on FOSS and FOSS-related topics. For many years now, I’ve been exploring &lt;a href=&quot;https://journals.sagepub.com/doi/10.1177/2056305115604338&quot;&gt;FOSS alternatives to corporate social media&lt;/a&gt;. I wrote a book about the FOSS projects that enable anonymous Internet practices – the so-called &lt;a href=&quot;https://mitpress.mit.edu/books/weaving-dark-web&quot;&gt;“Dark Web”&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;being-a-foss-academic&quot;&gt;Being a FOSS Academic&lt;/h2&gt;

&lt;p&gt;Drawing on this experience, I’ve decided to start a project about life as a “FOSS Academic” – someone who both uses FOSS tools &lt;em&gt;and&lt;/em&gt; explores their cultures, politics, and technical elements.&lt;/p&gt;

&lt;p&gt;Hence, this blog: &lt;em&gt;FOSS Academic&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The blog will do two things. First, driving toward what I’ll call &lt;strong&gt;Goal 1,&lt;/strong&gt; I will discuss the FOSS tools I use to do my academic research, including software (Libreoffice, Zotero) and hardware (the Raspberry Pi, the PinePhone). I’ll offer tips and tricks I’ve picked up, in case any of you want to live the “FOSS Academic Lifestyle Dream.” (I’ll admit, it’s not as polished as the i-Life, but I think it has its charms).&lt;/p&gt;

&lt;p&gt;Along the way, the blog will do a second job: I want to use this systematic, engaged look at FOSS to trace the culture, politics, and technical elements of FOSS. The world of FOSS is rich with interesting practices: community management, licensing and political economy of cooperative production, the politics of forking, privacy and security, competing visions of “freedom,” and the sociotechnical processes of design. As I mention in the &lt;a href=&quot;/about.html&quot;&gt;about page&lt;/a&gt;, I have &lt;strong&gt;Goal 2&lt;/strong&gt;, another reason for making this blog: I want to use is as a way to work through ideas and gather research with an eye towards a book-length study of FOSS. To that end, I’ll provide short essays on key concepts of FOSS.&lt;/p&gt;

&lt;p&gt;Sometimes, &lt;strong&gt;Goal 1&lt;/strong&gt; (FOSS tool talk) and &lt;strong&gt;Goal 2&lt;/strong&gt; (FOSS research) will be in separate posts. I have a feeling, however, that any given post in &lt;em&gt;FOSS Academic&lt;/em&gt; will combine the two.&lt;/p&gt;

&lt;h2 id=&quot;goal-1-topic-jekyll-and-sass&quot;&gt;Goal 1 Topic: Jekyll and Sass&lt;/h2&gt;

&lt;p&gt;So, with all that said, let’s talk about a &lt;strong&gt;Goal 1&lt;/strong&gt; topic, and it’s very meta: the tools I’m using to build this blog.&lt;/p&gt;

&lt;p&gt;Since this is a new project for me, I’ve decided to expand my skills. I’ve been goofing around with HTML5, CSS, and PHP for years now, creating my own templates for &lt;a href=&quot;https://www.robertwgehl.org&quot;&gt;my home page&lt;/a&gt;. I wanted to build on those skills and found the perfect vehicle in Jekyll, a &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;system that generates websites from plain text&lt;/a&gt;. Jekyll does everything I did with my own kludgy PHP templates: it uses variables, processes files, and is really modular.&lt;/p&gt;

&lt;p&gt;Moreover, it integrates with &lt;a href=&quot;https://sass-lang.com/&quot;&gt;Sass&lt;/a&gt;, a CSS pre-processor. I did something Sass-like (sassy?) with my PHP, using variables for things like colors and dimension. But Sass takes that to another level.&lt;/p&gt;

&lt;p&gt;Indeed, I’m going to do more to style this blog in a Sassy way – the current style (as of this writing) is pretty basic.&lt;/p&gt;

&lt;p&gt;And… these are FOSS tools. They’re licensed with the permissive MIT License. (I will save licensing – a decidedly &lt;strong&gt;Goal 2&lt;/strong&gt; topic, for another day). Thus, they allow others to build on them.&lt;/p&gt;

&lt;p&gt;I’m hoping that, over time, this blog will be a means for me to become proficient in Jekyll and Sass, thus adding these skills to my existing ones.&lt;/p&gt;

&lt;p&gt;And that only improves my FOSS Academic Lifestyle Dream.&lt;/p&gt;</content><author><name>RWG</name></author><category term="jekyll" /><category term="sass" /><category term="fald" /><category term="g1" /><category term="g2" /><summary type="html">&quot;Tux the penguin papercraft&quot; by Siobhan Rohlwink-Coutts is licensed with CC BY-NC-ND 2.0. As a university professor, I do a lot of different things, many of them having to do with technologies. I engage in research, write articles and books, put together syllabi, work with students, and collaborate with colleagues. All of these require the use of networked computers. But I don’t use Windows and I don’t use Apple.</summary></entry></feed>